<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Dress Listings | Designer Gown Exchange</title>
    <meta name="title" content="Dress Listings | Designer Gown Exchange">
    <meta name="description"
        content="Manage your designer gown listings and discover beautiful dresses from trusted sellers.">

    <meta property="og:type" content="website">
    <meta property="og:title" content="Dress Listings | Designer Gown Exchange">
    <meta property="og:description"
        content="Manage your designer gown listings and discover beautiful dresses from trusted sellers.">
    <meta property="og:url" content="https://designergownexchange.com/dashboard/listings/">
    <meta property="og:image" content="https://designergownexchange.com/images/og-dress-listings.png">

    <link rel="icon" type="image/png" href="/images/favicon.png" sizes="32x32">
    <link rel="canonical" href="https://designergownexchange.com/dashboard/listings/">

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css">
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <script src="https://cdn.tailwindcss.com"></script>
    <script>
        tailwind.config = {
            theme: {
                extend: {
                    fontFamily: {
                        'sans': ['Inter', 'system-ui', 'sans-serif'],
                    },
                    colors: {
                        'primary': {
                            50: '#eff6ff',
                            500: '#3b82f6',
                            600: '#2563eb',
                            700: '#1d4ed8',
                        }
                    }
                }
            }
        }
    </script>
</head>

<style>
    [x-cloak] {
        display: none !important;
    }

    body {
        font-family: 'Inter', system-ui, sans-serif;
    }

    .modal-open {
        overflow-y: scroll;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
    }

    @keyframes fadeInUp {
        from {
            opacity: 0;
            transform: translateY(20px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    @keyframes slideIn {
        from {
            opacity: 0;
            transform: scale(0.9);
        }

        to {
            opacity: 1;
            transform: scale(1);
        }
    }

    .animate-fadeInUp {
        animation: fadeInUp 0.4s ease-out forwards;
    }

    .animate-slideIn {
        animation: slideIn 0.3s ease-out forwards;
    }

    /* Custom scrollbar */
    .custom-scroll::-webkit-scrollbar {
        width: 6px;
    }

    .custom-scroll::-webkit-scrollbar-track {
        background: #f1f5f9;
        border-radius: 10px;
    }

    .custom-scroll::-webkit-scrollbar-thumb {
        background: #94a3b8;
        border-radius: 10px;
    }

    .custom-scroll::-webkit-scrollbar-thumb:hover {
        background: #64748b;
    }

    /* Glass effect */
    .glass {
        background: rgba(255, 255, 255, 0.9);
        backdrop-filter: blur(10px);
        border: 1px solid rgba(255, 255, 255, 0.2);
    }

    /* Gradient backgrounds */
    .gradient-bg {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    }

    .card-hover {
        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    }

    .card-hover:hover {
        transform: translateY(-4px);
        box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
    }

    /* Loading animation */
    .loading-dots {
        display: inline-flex;
        gap: 4px;
    }

    .loading-dot {
        width: 8px;
        height: 8px;
        border-radius: 50%;
        background: #3b82f6;
        animation: pulse 1.4s ease-in-out infinite both;
    }

    .loading-dot:nth-child(2) {
        animation-delay: 0.2s;
    }

    .loading-dot:nth-child(3) {
        animation-delay: 0.4s;
    }

    .loading-dot:nth-child(4) {
        animation-delay: 0.6s;
    }

    @keyframes pulse {

        0%,
        80%,
        100% {
            transform: scale(0.8);
            opacity: 0.5;
        }

        40% {
            transform: scale(1);
            opacity: 1;
        }
    }
</style>

<body class="bg-gray-50 min-h-screen">
    <!-- Navigation Header -->
    <header class="bg-white border-b border-gray-200 sticky top-0 z-40">
        <nav x-data="{ isOpen: false }" class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <div class="flex justify-between items-center h-16">
                <!-- Logo -->
                <div class="flex items-center">
                    <a href="/" class="flex items-center space-x-2">
                        <div class="w-8 h-8 bg-primary-600 rounded-lg flex items-center justify-center">
                            <i class="fas fa-gem text-white text-sm"></i>
                        </div>
                        <span class="text-xl font-semibold text-gray-900">Designer Gown Exchange</span>
                    </a>
                </div>

                <!-- Desktop Navigation -->
                <div class="hidden lg:flex items-center space-x-8">
                    <a href="/" class="text-gray-600 hover:text-primary-600 font-medium transition-colors">Home</a>
                    <a href="/shop-gowns/"
                        class="text-gray-600 hover:text-primary-600 font-medium transition-colors">Shop Gowns</a>
                    <a href="/sell-your-gown/"
                        class="text-gray-600 hover:text-primary-600 font-medium transition-colors">Sell Your Gown</a>
                    <a href="/about-us/"
                        class="text-gray-600 hover:text-primary-600 font-medium transition-colors">About</a>
                    <a href="/contact/"
                        class="text-gray-600 hover:text-primary-600 font-medium transition-colors">Contact</a>
                </div>

                <!-- User Menu -->
                <div class="hidden lg:flex items-center space-x-4">
                    <div class="flex items-center space-x-2 px-3 py-2 rounded-lg bg-gray-50">
                        <img class="w-8 h-8 rounded-full object-cover"
                            src="https://images.unsplash.com/photo-1494790108755-2616b612b786?w=32&h=32&fit=crop&crop=face"
                            alt="Profile" />
                        <span class="text-sm font-medium text-gray-700">Hershy S</span>
                    </div>
                    <button id="logout-btn"
                        class="px-4 py-2 text-sm font-medium text-white bg-red-600 rounded-lg hover:bg-red-700 transition-colors">
                        Logout
                    </button>
                </div>

                <!-- Mobile menu button -->
                <button x-cloak @click="isOpen = !isOpen"
                    class="lg:hidden p-2 text-gray-600 hover:text-gray-900 focus:outline-none focus:ring-2 focus:ring-primary-500 rounded-lg">
                    <svg x-show="!isOpen" class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                            d="M4 6h16M4 12h16M4 18h16" />
                    </svg>
                    <svg x-show="isOpen" class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                            d="M6 18L18 6M6 6l12 12" />
                    </svg>
                </button>
            </div>

            <!-- Mobile menu -->
            <div x-cloak x-show="isOpen" x-transition:enter="transition ease-out duration-200"
                x-transition:enter-start="opacity-0 scale-95" x-transition:enter-end="opacity-100 scale-100"
                x-transition:leave="transition ease-in duration-150" x-transition:leave-start="opacity-100 scale-100"
                x-transition:leave-end="opacity-0 scale-95"
                class="lg:hidden absolute top-16 inset-x-0 bg-white border-b border-gray-200 shadow-lg">
                <div class="px-4 py-6 space-y-4">
                    <a href="/" class="block text-gray-600 hover:text-primary-600 font-medium">Home</a>
                    <a href="/shop-gowns/" class="block text-gray-600 hover:text-primary-600 font-medium">Shop Gowns</a>
                    <a href="/sell-your-gown/" class="block text-gray-600 hover:text-primary-600 font-medium">Sell Your
                        Gown</a>
                    <a href="/about-us/" class="block text-gray-600 hover:text-primary-600 font-medium">About</a>
                    <a href="/contact/" class="block text-gray-600 hover:text-primary-600 font-medium">Contact</a>
                    <hr class="my-4">
                    <button id="mobile-logout-btn" class="w-full text-left text-red-600 hover:text-red-700 font-medium">
                        Logout
                    </button>
                </div>
            </div>
        </nav>
    </header>

    <div class="flex">
        <!-- Sidebar -->
        <aside class="hidden lg:block w-72 bg-white border-r border-gray-200 min-h-screen">
            <div class="p-6">
                <h2 class="text-lg font-semibold text-gray-900 mb-6">Dashboard</h2>
                <nav class="space-y-2">
                    <a href="/dashboard/"
                        class="flex items-center px-4 py-3 text-gray-600 rounded-lg hover:bg-gray-50 hover:text-gray-900 transition-colors">
                        <i class="fas fa-chart-pie w-5 mr-3"></i>
                        <span class="font-medium">Overview</span>
                    </a>
                    <a href="/dashboard/listings/"
                        class="flex items-center px-4 py-3 bg-primary-50 text-primary-700 rounded-lg font-medium">
                        <i class="fas fa-list w-5 mr-3"></i>
                        <span>My Listings</span>
                    </a>
                    <a href="/dashboard/calculator/"
                        class="flex items-center px-4 py-3 text-gray-600 rounded-lg hover:bg-gray-50 hover:text-gray-900 transition-colors">
                        <i class="fas fa-calculator w-5 mr-3"></i>
                        <span class="font-medium">Price Calculator</span>
                    </a>
                    <a href="/dashboard/settings/"
                        class="flex items-center px-4 py-3 text-gray-600 rounded-lg hover:bg-gray-50 hover:text-gray-900 transition-colors">
                        <i class="fas fa-cog w-5 mr-3"></i>
                        <span class="font-medium">Settings</span>
                    </a>
                </nav>
            </div>
        </aside>

        <!-- Main Content -->
        <main class="flex-1 p-6">
            <!-- Header with Search -->
            <div class="mb-8">
                <div class="flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4">
                    <div>
                        <h1 class="text-2xl font-bold text-gray-900">My Dress Listings</h1>
                        <p class="text-gray-600 mt-1">Manage and edit your designer gown listings</p>
                    </div>

                    <!-- Search Bar -->
                    <div class="relative w-full sm:w-96">
                        <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                            <i class="fas fa-search text-gray-400"></i>
                        </div>
                        <input id="search-bar" type="text" placeholder="Search your listings..."
                            onkeyup="filterDresses()" oninput="updateSuggestions()" autocomplete="off"
                            class="w-full pl-10 pr-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-transparent transition-all" />

                        <!-- Suggestions Dropdown -->
                        <ul id="dress-suggestions"
                            class="absolute z-10 w-full mt-1 bg-white border border-gray-200 rounded-lg shadow-lg max-h-60 overflow-y-auto custom-scroll hidden">
                        </ul>
                    </div>
                </div>
            </div>

            <!-- Loading State -->
            <div id="loading-wrapper" class="flex justify-center items-center h-64">
                <div class="text-center">
                    <div class="loading-dots mb-4">
                        <div class="loading-dot"></div>
                        <div class="loading-dot"></div>
                        <div class="loading-dot"></div>
                        <div class="loading-dot"></div>
                    </div>
                    <p class="text-gray-600">Loading your listings...</p>
                </div>
            </div>

            <!-- Listings Grid -->
            <div id="dresses-container" class="grid grid-cols-1 md:grid-cols-2 xl:grid-cols-3 gap-6">
                <!-- Cards will be populated by JavaScript -->
            </div>

            <!-- No Results Message -->
            <div id="no-match-message" class="text-center py-12 hidden">
                <i class="fas fa-search text-gray-300 text-4xl mb-4"></i>
                <h3 class="text-lg font-medium text-gray-900 mb-2">No listings found</h3>
                <p class="text-gray-600">Try adjusting your search criteria or add a new listing</p>
            </div>

            <!-- Floating Add Button -->
            <button onclick="openAddDressModal()"
                class="fixed bottom-6 right-6 w-14 h-14 bg-primary-600 text-white rounded-full shadow-lg hover:bg-primary-700 hover:shadow-xl transition-all duration-200 flex items-center justify-center group z-50">
                <i class="fas fa-plus text-xl group-hover:rotate-90 transition-transform duration-200"></i>
            </button>
        </main>
    </div>

















    <!-- Add Dress Modal -->
    <div id="addDressModal"
        class="fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50 hidden p-4">
        <div
            class="bg-white rounded-xl shadow-2xl max-w-2xl w-full max-h-[90vh] overflow-y-auto custom-scroll animate-slideIn">
            <!-- Modal Header -->
            <div class="sticky top-0 bg-white border-b border-gray-200 px-6 py-4 rounded-t-xl">
                <div class="flex items-center justify-between">
                    <h2 class="text-xl font-semibold text-gray-900">Add New Dress Listing</h2>
                    <button onclick="closeAddDressModal()"
                        class="p-2 text-gray-400 hover:text-gray-600 rounded-lg hover:bg-gray-100 transition-colors">
                        <i class="fas fa-times text-xl"></i>
                    </button>
                </div>
            </div>

            <!-- Modal Content -->
            <form id="dress-form" class="p-6 space-y-6">
                <!-- Seller Information -->
                <div class="space-y-4">
                    <h3 class="text-lg font-medium text-gray-900 flex items-center">
                        <i class="fas fa-user text-primary-600 mr-2"></i>
                        Seller Information
                    </h3>
                    <div class="grid grid-cols-1 sm:grid-cols-2 gap-4">
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-1">First Name *</label>
                            <input type="text" id="first-name" required
                                class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-transparent transition-all" />
                        </div>
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-1">Last Name *</label>
                            <input type="text" id="last-name" required
                                class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-transparent transition-all" />
                        </div>
                    </div>
                    <div class="grid grid-cols-1 sm:grid-cols-2 gap-4">
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-1">Phone Number *</label>
                            <input type="tel" id="phone" required
                                class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-transparent transition-all" />
                        </div>
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-1">Email Address *</label>
                            <input type="email" id="email" required
                                class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-transparent transition-all" />
                        </div>
                    </div>

                    <!-- Contact Preferences -->
                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-2">Preferred Contact Methods *</label>
                        <div class="flex flex-wrap gap-4">
                            <label class="flex items-center">
                                <input type="checkbox" class="form-checkbox text-primary-600 rounded mr-2">
                                <span class="text-sm text-gray-700">Phone Call</span>
                            </label>
                            <label class="flex items-center">
                                <input type="checkbox" class="form-checkbox text-primary-600 rounded mr-2">
                                <span class="text-sm text-gray-700">Text Message</span>
                            </label>
                            <label class="flex items-center">
                                <input type="checkbox" class="form-checkbox text-primary-600 rounded mr-2">
                                <span class="text-sm text-gray-700">WhatsApp</span>
                            </label>
                            <label class="flex items-center">
                                <input type="checkbox" class="form-checkbox text-primary-600 rounded mr-2">
                                <span class="text-sm text-gray-700">Email</span>
                            </label>
                        </div>
                    </div>
                </div>

                <!-- Dress Information -->
                <div class="space-y-4">
                    <h3 class="text-lg font-medium text-gray-900 flex items-center">
                        <i class="fas fa-dress text-primary-600 mr-2"></i>
                        Dress Information
                    </h3>
                    <div class="grid grid-cols-1 sm:grid-cols-2 gap-4">
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-1">Dress Name *</label>
                            <input type="text" id="dress-name" required
                                class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-transparent transition-all" />
                        </div>
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-1">Brand *</label>
                            <input type="text" id="dress-brand" required
                                class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-transparent transition-all" />
                        </div>
                    </div>
                </div>

                <!-- Images Upload -->
                <div class="space-y-4">
                    <h3 class="text-lg font-medium text-gray-900 flex items-center">
                        <i class="fas fa-images text-primary-600 mr-2"></i>
                        Photos
                    </h3>
                    <div
                        class="border-2 border-dashed border-gray-300 rounded-lg p-6 text-center hover:border-primary-400 transition-colors">
                        <label for="dropzone-file" class="cursor-pointer">
                            <i class="fas fa-cloud-upload-alt text-4xl text-gray-400 mb-3"></i>
                            <p class="text-lg font-medium text-gray-700 mb-1">Upload Dress Photos</p>
                            <p class="text-sm text-gray-500">Drag and drop files here, or click to select</p>
                            <p class="text-xs text-gray-400 mt-2">PNG, JPG up to 5MB each</p>
                            <input id="dropzone-file" type="file" class="hidden" multiple accept="image/*" />
                        </label>
                    </div>
                    <div id="image-preview" class="grid grid-cols-3 sm:grid-cols-4 gap-3"></div>
                </div>

                <!-- Dress Details -->
                <div class="space-y-4">
                    <h3 class="text-lg font-medium text-gray-900 flex items-center">
                        <i class="fas fa-info-circle text-primary-600 mr-2"></i>
                        Details
                    </h3>
                    <div class="grid grid-cols-1 sm:grid-cols-2 gap-4">
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-1">Size *</label>
                            <select id="dress-size" required
                                class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-transparent transition-all">
                                <option value="">Select Size</option>
                                <option value="0 - 32">0 - 32</option>
                                <option value="2 - 34">2 - 34</option>
                                <option value="4 - 36">4 - 36</option>
                                <option value="6 - 38">6 - 38</option>
                                <option value="8 - 40">8 - 40</option>
                                <option value="10 - 42">10 - 42</option>
                                <option value="12 - 44">12 - 44</option>
                                <option value="14 - 46">14 - 46</option>
                                <option value="16 - 48">16 - 48</option>
                                <option value="18 - 50">18 - 50</option>
                                <option value="Other">Other</option>
                            </select>
                        </div>
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-1">Color *</label>
                            <select id="dress-color" required
                                class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-transparent transition-all">
                                <option value="">Select Color</option>
                                <option value="Black">Black</option>
                                <option value="Blue">Blue</option>
                                <option value="Brown">Brown</option>
                                <option value="Gold">Gold</option>
                                <option value="Green">Green</option>
                                <option value="Grey">Grey</option>
                                <option value="Ivory">Ivory</option>
                                <option value="Multi">Multi</option>
                                <option value="Orange">Orange</option>
                                <option value="Pink">Pink</option>
                                <option value="Purple">Purple</option>
                                <option value="Red">Red</option>
                                <option value="Silver">Silver</option>
                                <option value="White">White</option>
                                <option value="Yellow">Yellow</option>
                            </select>
                        </div>
                    </div>
                    <div class="grid grid-cols-1 sm:grid-cols-2 gap-4">
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-1">Condition *</label>
                            <select id="dress-condition" required
                                class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-transparent transition-all">
                                <option value="">Select Condition</option>
                                <option value="New with Tags">New with Tags</option>
                                <option value="New without Tags">New without Tags</option>
                                <option value="Excellent">Excellent</option>
                                <option value="Good">Good</option>
                                <option value="Fair">Fair</option>
                            </select>
                        </div>
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-1">Location *</label>
                            <select id="dress-location" required
                                class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-transparent transition-all custom-scroll">
                                <option value="">Select Location</option>
                                <option value="Boro Park NY">Boro Park NY</option>
                                <option value="Crown Heights NY">Crown Heights NY</option>
                                <option value="Deal NJ">Deal NJ</option>
                                <option value="Far Rockaway NY">Far Rockaway NY</option>
                                <option value="Flatbush NY">Flatbush NY</option>
                                <option value="Jackson NJ">Jackson NJ</option>
                                <option value="Lakewood NJ">Lakewood NJ</option>
                                <option value="Lawrence NY">Lawrence NY</option>
                                <option value="Long Island NY">Long Island NY</option>
                                <option value="Monroe NY">Monroe NY</option>
                                <option value="Monsey NY">Monsey NY</option>
                                <option value="Upstate NY">Upstate NY</option>
                                <option value="Williamsburg NY">Williamsburg NY</option>
                                <option value="Montreal - CA">Montreal - CA</option>
                                <option value="Toronto - CA">Toronto - CA</option>
                                <option value="London - UK">London - UK</option>
                                <option value="Manchester - UK">Manchester - UK</option>
                                <option value="Antwerp - EU">Antwerp - EU</option>
                                <option value="Belgium - EU">Belgium - EU</option>
                                <option value="Israel">Israel</option>
                                <option value="Other">Other</option>
                            </select>
                        </div>
                    </div>
                </div>

                <!-- Pricing -->
                <div class="space-y-4">
                    <h3 class="text-lg font-medium text-gray-900 flex items-center">
                        <i class="fas fa-dollar-sign text-primary-600 mr-2"></i>
                        Pricing
                    </h3>
                    <div class="grid grid-cols-1 sm:grid-cols-2 gap-4">
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-1">Asking Price *</label>
                            <div class="relative">
                                <span class="absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-500">$</span>
                                <input type="number" id="dress-asking-price" placeholder="0.00" required
                                    class="w-full pl-8 pr-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-transparent transition-all" />
                            </div>
                        </div>
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-1">Original Price Paid *</label>
                            <div class="relative">
                                <span class="absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-500">$</span>
                                <input type="number" id="dress-paid" placeholder="0.00" required
                                    class="w-full pl-8 pr-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-transparent transition-all" />
                            </div>
                        </div>
                    </div>

                    <div class="flex items-center justify-between p-4 bg-gray-50 rounded-lg">
                        <div>
                            <label class="text-sm font-medium text-gray-700">Price Negotiable?</label>
                            <p class="text-xs text-gray-500">Allow buyers to make offers</p>
                        </div>
                        <label class="relative inline-flex items-center cursor-pointer">
                            <input type="checkbox" id="dress-negotiable" class="sr-only peer">
                            <div
                                class="w-11 h-6 bg-gray-200 rounded-full peer-checked:bg-primary-600 peer-focus:ring-2 peer-focus:ring-primary-300 transition-all">
                            </div>
                            <div
                                class="absolute left-0.5 top-0.5 w-5 h-5 bg-white rounded-full shadow-md transform transition-all peer-checked:translate-x-full">
                            </div>
                        </label>
                    </div>
                </div>

                <!-- Additional Information -->
                <div class="space-y-4">
                    <h3 class="text-lg font-medium text-gray-900 flex items-center">
                        <i class="fas fa-comment text-primary-600 mr-2"></i>
                        Additional Information
                    </h3>
                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-1">Description (Optional)</label>
                        <textarea id="dress-additional" rows="4"
                            placeholder="Add any additional details about the dress, special features, or selling conditions..."
                            class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-transparent transition-all custom-scroll resize-none"></textarea>
                    </div>
                </div>

                <!-- Form Actions -->
                <div class="flex flex-col sm:flex-row gap-3 pt-6 border-t border-gray-200">
                    <button type="button" onclick="closeAddDressModal()"
                        class="flex-1 px-6 py-3 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 font-medium transition-colors">
                        Cancel
                    </button>
                    <button type="button" onclick="submitDress()"
                        class="flex-1 px-6 py-3 bg-primary-600 text-white rounded-lg hover:bg-primary-700 font-medium transition-colors">
                        <span id="submit-btn-text">Create Listing</span>
                        <i id="submit-spinner" class="fas fa-spinner fa-spin ml-2 hidden"></i>
                    </button>
                </div>

                <!-- Submit Message -->
                <div id="submit-message" class="text-center text-sm font-medium"></div>
            </form>
        </div>
    </div>













    <!-- Delete Confirmation Modal -->
    <div id="delete-modal" class="fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50 hidden">
        <div class="bg-white rounded-xl shadow-2xl max-w-md w-full mx-4 animate-slideIn">
            <div class="p-6">
                <div class="flex items-center mb-4">
                    <div class="w-12 h-12 bg-red-100 rounded-full flex items-center justify-center mr-4">
                        <i class="fas fa-trash-alt text-red-600 text-xl"></i>
                    </div>
                    <div>
                        <h3 class="text-lg font-semibold text-gray-900">Delete Listing</h3>
                        <p class="text-sm text-gray-600">This action cannot be undone</p>
                    </div>
                </div>
                <p class="text-gray-700 mb-6">Are you sure you want to delete this dress listing? All associated data
                    and images will be permanently removed.</p>
                <div class="flex gap-3">
                    <button id="cancel-delete"
                        class="flex-1 px-4 py-2 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 font-medium transition-colors">
                        Cancel
                    </button>
                    <button id="confirm-delete"
                        class="flex-1 px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 font-medium transition-colors">
                        Delete
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- Toast Notifications -->
    <div id="toast-container" class="fixed bottom-4 right-4 z-50 space-y-2"></div>

    <!-- Scripts -->
    <script src="https://cdn.jsdelivr.net/npm/alpinejs@3.x.x/dist/cdn.min.js" defer></script>
    <script src="https://www.gstatic.com/firebasejs/10.8.0/firebase-app-compat.js"></script>
    <script src="https://www.gstatic.com/firebasejs/10.8.0/firebase-firestore-compat.js"></script>
    <script src="https://www.gstatic.com/firebasejs/9.23.0/firebase-storage-compat.js"></script>
    <script src="https://www.gstatic.com/firebasejs/10.8.0/firebase-auth-compat.js"></script>

    <script>
        // Firebase Configuration
        const firebaseConfig = {
            apiKey: "AIzaSyDzYucxzEhmH3XgxGZd_YODxzzvpNp2P0s",
            authDomain: "project-2145d.firebaseapp.com",
            projectId: "project-2145d",
            storageBucket: "project-2145d.firebasestorage.app",
            messagingSenderId: "296278039161",
            appId: "1:296278039161:web:e1049596a67bfe51ab12a8"
        };

        firebase.initializeApp(firebaseConfig);
        const db = firebase.firestore();
        const storage = firebase.storage();

        // Authentication State Management
        firebase.auth().onAuthStateChanged(user => {
            if (user) {
                document.body.classList.remove('hidden');
                loadDresses();
            } else {
                window.location.href = "/login/";
            }
        });

        // Logout Functionality
        function setupLogoutHandlers() {
            const logoutBtns = ['logout-btn', 'mobile-logout-btn'];
            logoutBtns.forEach(id => {
                const btn = document.getElementById(id);
                if (btn) {
                    btn.addEventListener("click", handleLogout);
                }
            });
        }

        function handleLogout(e) {
            e.preventDefault();
            firebase.auth().signOut().then(() => {
                window.location.href = "/login/";
            }).catch(error => {
                showToast("Error logging out. Please try again.", "error");
                console.error(error);
            });
        }

        // Toast Notification System
        function showToast(message, type = 'info') {
            const container = document.getElementById('toast-container');
            const toast = document.createElement('div');

            const bgColor = {
                'success': 'bg-green-500',
                'error': 'bg-red-500',
                'warning': 'bg-yellow-500',
                'info': 'bg-blue-500'
            }[type] || 'bg-blue-500';

            const icon = {
                'success': 'fas fa-check-circle',
                'error': 'fas fa-exclamation-circle',
                'warning': 'fas fa-exclamation-triangle',
                'info': 'fas fa-info-circle'
            }[type] || 'fas fa-info-circle';

            toast.className = `${bgColor} text-white px-4 py-3 rounded-lg shadow-lg flex items-center transform translate-x-full transition-transform duration-300`;
            toast.innerHTML = `
                <i class="${icon} mr-2"></i>
                <span class="flex-1">${message}</span>
                <button onclick="this.parentElement.remove()" class="ml-2 text-white hover:text-gray-200">
                    <i class="fas fa-times"></i>
                </button>
            `;

            container.appendChild(toast);

            // Slide in
            setTimeout(() => {
                toast.classList.remove('translate-x-full');
            }, 10);

            // Auto remove after 5 seconds
            setTimeout(() => {
                if (toast.parentElement) {
                    toast.classList.add('translate-x-full');
                    setTimeout(() => toast.remove(), 300);
                }
            }, 5000);
        }

        // Modal Management
        function openAddDressModal() {
            const modal = document.getElementById("addDressModal");
            modal.classList.remove("hidden");
            document.body.classList.add("modal-open");
        }

        function closeAddDressModal() {
            const modal = document.getElementById("addDressModal");
            modal.classList.add("hidden");
            document.body.classList.remove("modal-open");
            resetForm();
        }

        function resetForm() {
            document.getElementById("dress-form").reset();
            document.getElementById("image-preview").innerHTML = "";
            document.getElementById("submit-message").textContent = "";
            document.getElementById("submit-btn-text").textContent = "Create Listing";
            document.getElementById("submit-spinner").classList.add("hidden");
        }

        // Image Upload Handling
        function setupImageUpload() {
            const dropzone = document.getElementById("dropzone-file");
            const preview = document.getElementById("image-preview");

            dropzone.addEventListener("change", handleImageSelection);

            // Drag and drop functionality
            const dropArea = dropzone.parentElement;

            ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {
                dropArea.addEventListener(eventName, preventDefaults, false);
            });

            ['dragenter', 'dragover'].forEach(eventName => {
                dropArea.addEventListener(eventName, highlight, false);
            });

            ['dragleave', 'drop'].forEach(eventName => {
                dropArea.addEventListener(eventName, unhighlight, false);
            });

            dropArea.addEventListener('drop', handleDrop, false);

            function preventDefaults(e) {
                e.preventDefault();
                e.stopPropagation();
            }

            function highlight(e) {
                dropArea.classList.add('border-primary-400', 'bg-primary-50');
            }

            function unhighlight(e) {
                dropArea.classList.remove('border-primary-400', 'bg-primary-50');
            }

            function handleDrop(e) {
                const dt = e.dataTransfer;
                const files = dt.files;
                dropzone.files = files;
                handleImageSelection();
            }
        }

        function handleImageSelection() {
            const preview = document.getElementById("image-preview");
            const files = document.getElementById("dropzone-file").files;

            preview.innerHTML = "";

            if (!files.length) return;

            Array.from(files).forEach((file, index) => {
                if (!file.type.startsWith('image/')) {
                    showToast(`${file.name} is not a valid image file`, 'error');
                    return;
                }

                if (file.size > 5 * 1024 * 1024) {
                    showToast(`${file.name} is too large. Maximum size is 5MB`, 'error');
                    return;
                }

                const reader = new FileReader();
                reader.onload = (e) => {
                    const imageContainer = document.createElement("div");
                    imageContainer.className = "relative group";
                    imageContainer.innerHTML = `
                        <img src="${e.target.result}" 
                             class="w-20 h-20 object-cover rounded-lg border-2 border-gray-200 group-hover:border-primary-400 transition-colors" 
                             alt="Preview ${index + 1}">
                        <button type="button" onclick="this.parentElement.remove()" 
                                class="absolute -top-2 -right-2 w-6 h-6 bg-red-500 text-white rounded-full hover:bg-red-600 transition-colors opacity-0 group-hover:opacity-100 flex items-center justify-center">
                            <i class="fas fa-times text-xs"></i>
                        </button>
                    `;
                    preview.appendChild(imageContainer);
                };
                reader.readAsDataURL(file);
            });
        }

        // Form Submission
        async function submitDress() {
            const submitBtn = document.getElementById("submit-btn-text");
            const spinner = document.getElementById("submit-spinner");
            const message = document.getElementById("submit-message");

            // Show loading state
            submitBtn.textContent = "Creating...";
            spinner.classList.remove("hidden");

            try {
                // Get form data
                const formData = getFormData();

                // Validate form
                if (!validateForm(formData)) {
                    throw new Error("Please fill in all required fields");
                }

                // Upload images
                const imageUrls = await uploadImages();

                // Save to database
                await db.collection("dress_db").add({
                    ...formData,
                    images: imageUrls,
                    timestamp: firebase.firestore.FieldValue.serverTimestamp()
                });

                showToast("Listing created!", "success");
                resetForm();
                loadDresses(); // Refresh the listings

            } catch (error) {
                console.error(error);
                showToast(error.message || "Error creating listing. Please try again.", "error");
            } finally {
                // Reset button state
                submitBtn.textContent = "Create Listing";
                spinner.classList.add("hidden");
            }
        }

        function getFormData() {
            const contactOptions = Array.from(document.querySelectorAll('input[type="checkbox"]:checked'))
                .map(cb => cb.nextElementSibling.textContent.trim());

            return {
                seller: {
                    firstName: document.getElementById("first-name").value.trim(),
                    lastName: document.getElementById("last-name").value.trim(),
                    phone: document.getElementById("phone").value.trim(),
                    email: document.getElementById("email").value.trim(),
                    contactOptions
                },
                dress: {
                    name: document.getElementById("dress-name").value.trim(),
                    brand: document.getElementById("dress-brand").value.trim(),
                    size: document.getElementById("dress-size").value,
                    color: document.getElementById("dress-color").value,
                    condition: document.getElementById("dress-condition").value,
                    location: document.getElementById("dress-location").value
                },
                pricing: {
                    askingPrice: parseFloat(document.getElementById("dress-asking-price").value) || 0,
                    originalPrice: parseFloat(document.getElementById("dress-paid").value) || 0,
                    negotiable: document.getElementById("dress-negotiable").checked
                },
                additional: document.getElementById("dress-additional").value.trim()
            };
        }

        function validateForm(formData) {
            const required = [
                formData.seller.firstName,
                formData.seller.lastName,
                formData.seller.phone,
                formData.seller.email,
                formData.dress.name,
                formData.dress.brand,
                formData.dress.size,
                formData.dress.color,
                formData.dress.condition,
                formData.dress.location,
                formData.pricing.askingPrice,
                formData.pricing.originalPrice
            ];

            const images = document.getElementById("dropzone-file").files;

            return required.every(field => field && field !== "") &&
                formData.seller.contactOptions.length > 0 &&
                images.length > 0;
        }

        async function uploadImages() {
            const files = document.getElementById("dropzone-file").files;
            const uploadPromises = [];

            for (let i = 0; i < files.length; i++) {
                const file = files[i];
                const fileName = `dress_images/${Date.now()}_${Math.random().toString(36).substr(2, 9)}_${file.name}`;
                const storageRef = storage.ref(fileName);
                uploadPromises.push(
                    storageRef.put(file).then(snapshot => snapshot.ref.getDownloadURL())
                );
            }

            return Promise.all(uploadPromises);
        }

        // Load and Display Dresses
        async function loadDresses() {
            const container = document.getElementById("dresses-container");
            const loading = document.getElementById("loading-wrapper");
            const noResults = document.getElementById("no-match-message");

            try {
                loading.classList.remove("hidden");
                container.innerHTML = "";
                noResults.classList.add("hidden");

                const querySnapshot = await db.collection("dress_db")
                    .orderBy("timestamp", "desc")
                    .get();

                loading.classList.add("hidden");

                if (querySnapshot.empty) {
                    noResults.classList.remove("hidden");
                    return;
                }

                querySnapshot.forEach(doc => {
                    const dress = doc.data();
                    const dressCard = createDressCard(doc.id, dress);
                    container.appendChild(dressCard);
                });

            } catch (error) {
                console.error("Error loading dresses:", error);
                loading.classList.add("hidden");
                showToast("Error loading listings. Please refresh the page.", "error");
            }

        }

        function createDressCard(id, dress) {
            const card = document.createElement("div");
            card.className = "bg-white rounded-xl shadow-sm hover:shadow-md transition-all duration-200 card-hover overflow-hidden animate-fadeInUp";

            const mainImage = dress.images && dress.images.length > 0 ? dress.images[0] : '/images/placeholder-dress.jpg';
            const formattedPrice = new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(dress.pricing.askingPrice);
            const originalPrice = new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(dress.pricing.originalPrice);

            card.innerHTML = `
                <div class="relative">
                    <img src="${mainImage}" alt="${dress.dress.name}" 
                         class="w-full h-48 object-cover" 
                         onerror="this.src='/images/placeholder-dress.jpg'">
                    <div class="absolute top-3 right-3 space-y-2">
                        <button onclick="editDress('${id}')" 
                                class="w-8 h-8 bg-white bg-opacity-90 rounded-full hover:bg-opacity-100 transition-all flex items-center justify-center shadow-md">
                            <i class="fas fa-edit text-primary-600 text-sm"></i>
                        </button>
                        <button onclick="deleteDress('${id}')" 
                                class="w-8 h-8 bg-white bg-opacity-90 rounded-full hover:bg-opacity-100 transition-all flex items-center justify-center shadow-md">
                            <i class="fas fa-trash text-red-500 text-sm"></i>
                        </button>
                    </div>
                    ${dress.pricing.negotiable ? '<div class="absolute top-3 left-3 bg-green-500 text-white px-2 py-1 rounded-full text-xs font-medium">Negotiable</div>' : ''}
                </div>
                <div class="p-4">
                    <div class="flex items-start justify-between mb-2">
                        <h3 class="text-lg font-semibold text-gray-900 truncate">${dress.dress.name}</h3>
                        <span class="text-lg font-bold text-primary-600">${formattedPrice}</span>
                    </div>
                    <p class="text-sm text-gray-600 mb-2">${dress.dress.brand}</p>
                    <div class="flex items-center space-x-4 text-xs text-gray-500 mb-3">
                        <span class="flex items-center">
                            <i class="fas fa-ruler-combined mr-1"></i>
                            Size ${dress.dress.size}
                        </span>
                        <span class="flex items-center">
                            <i class="fas fa-palette mr-1"></i>
                            ${dress.dress.color}
                        </span>
                        <span class="flex items-center">
                            <i class="fas fa-map-marker-alt mr-1"></i>
                            ${dress.dress.location}
                        </span>
                    </div>
                    <div class="flex items-center justify-between">
                        <span class="text-xs text-gray-500">
                            Condition: <span class="font-medium">${dress.dress.condition}</span>
                        </span>
                        <span class="text-xs text-gray-400">
                            Originally ${originalPrice}
                        </span>
                    </div>
                </div>
            `;

            return card;
        }

        // Search and Filter Functionality
        function filterDresses() {
            const searchTerm = document.getElementById("search-bar").value.toLowerCase();
            const cards = document.querySelectorAll("#dresses-container > div");
            const noResults = document.getElementById("no-match-message");
            let visibleCount = 0;

            cards.forEach(card => {
                const text = card.textContent.toLowerCase();
                if (text.includes(searchTerm)) {
                    card.style.display = "block";
                    visibleCount++;
                } else {
                    card.style.display = "none";
                }
            });

            noResults.classList.toggle("hidden", visibleCount > 0 || searchTerm === "");
        }

        function updateSuggestions() {
            // Implementation for search suggestions can be added here
            // For now, we'll keep it simple with the filter function
            filterDresses();
        }

        // Delete Functionality
        let dressToDelete = null;

        function deleteDress(id) {
            dressToDelete = id;
            const modal = document.getElementById("delete-modal");
            modal.classList.remove("hidden");
        }

        function setupDeleteModal() {
            const cancelBtn = document.getElementById("cancel-delete");
            const confirmBtn = document.getElementById("confirm-delete");
            const modal = document.getElementById("delete-modal");

            cancelBtn.addEventListener("click", () => {
                modal.classList.add("hidden");
                dressToDelete = null;
            });

            confirmBtn.addEventListener("click", async () => {
                if (!dressToDelete) return;

                try {
                    await db.collection("dress_db").doc(dressToDelete).delete();
                    showToast("Listing deleted successfully", "success");
                    modal.classList.add("hidden");
                    loadDresses();
                } catch (error) {
                    console.error("Error deleting dress:", error);
                    showToast("Error deleting listing. Please try again.", "error");
                }

                dressToDelete = null;
            });
        }

        // Edit Functionality (placeholder for future implementation)
        function editDress(id) {
            showToast("Edit functionality coming soon!", "info");
        }

        // Initialize Everything
        document.addEventListener("DOMContentLoaded", () => {
            setupLogoutHandlers();
            setupImageUpload();
            setupDeleteModal();
        });

        // Close modals when clicking outside
        document.addEventListener("click", (e) => {
            if (e.target.id === "addDressModal") {
                closeAddDressModal();
            }
            if (e.target.id === "delete-modal") {
                document.getElementById("delete-modal").classList.add("hidden");
                dressToDelete = null;
            }
        });
    </script>
</body>

</html>